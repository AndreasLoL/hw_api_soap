
package soap;

import service.TwitterService;

import com.google.gson.JsonElement;
import com.rethinkdb.net.Cursor;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.jws.soap.SOAPBinding;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.datatype.DatatypeConfigurationException;
import javax.xml.datatype.DatatypeFactory;
import javax.xml.datatype.XMLGregorianCalendar;
import javax.xml.ws.Endpoint;
import java.util.ArrayList;
import java.util.GregorianCalendar;
import java.util.List;
import java.util.Optional;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.7-b01
 * Generated source version: 2.2
 *
 */
@WebService(name = "TwitterPortType", targetNamespace = "http://veebiteenused.ttu.ee")
@SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
@XmlSeeAlso({
        ObjectFactory.class
})
public class TwitterPortType {

    TwitterService service;

    public TwitterPortType() {
        service = new TwitterService();
    }

    /**
     *
     * @param parameter
     * @return
     *     returns soap.Tweet
     */
    @WebMethod(operationName = "GetTweet")
    @WebResult(name = "GetTweetResponse", targetNamespace = "http://veebiteenused.ttu.ee", partName = "parameter")
    public Tweet getTweet(
            @WebParam(name = "GetTweetRequest", targetNamespace = "http://veebiteenused.ttu.ee", partName = "parameter")
                    GetTweetRequest parameter) {

        return service.getTweet(parameter.token, parameter.getID());
    }

    /**
     *
     * @param parameter
     * @return
     *     returns soap.Tweet
     */
    @WebMethod(operationName = "AddTweet")
    @WebResult(name = "AddTweetResponse", targetNamespace = "http://veebiteenused.ttu.ee", partName = "parameter")
    public Tweet addTweet(
            @WebParam(name = "AddTweetRequest", targetNamespace = "http://veebiteenused.ttu.ee", partName = "parameter")
                    AddTweetRequest parameter) {

        return service.addTweet(parameter.getToken(), parameter.getMessage(), parameter.getOwnerID());
    }

    /**
     *
     * @param parameter
     * @return
     *     returns soap.Comment
     */
    @WebMethod(operationName = "GetComment")
    @WebResult(name = "GetCommentResponse", targetNamespace = "http://veebiteenused.ttu.ee", partName = "parameter")
    public Comment getComment(
            @WebParam(name = "GetCommentRequest", targetNamespace = "http://veebiteenused.ttu.ee", partName = "parameter")
                    GetCommentRequest parameter) {

        return service.getComment(parameter.getToken(), parameter.getCommentID());
    }

    /**
     *
     * @param parameter
     * @return
     *     returns soap.GetTweetsResponse
     */
    @WebMethod(operationName = "GetTweets")
    @WebResult(name = "GetTweetsResponse", targetNamespace = "http://veebiteenused.ttu.ee", partName = "parameter")
    public GetTweetsResponse getTweets(
            @WebParam(name = "GetTweetsRequest", targetNamespace = "http://veebiteenused.ttu.ee", partName = "parameter")
                    GetTweetsRequest parameter) {

        Optional startDate;
        Optional endDate;

        if (parameter.getStartDate() == null) {
            startDate = Optional.empty();
        } else {
            startDate = Optional.of(parameter.getStartDate().toGregorianCalendar().toZonedDateTime().toLocalDateTime());
        }

        if (parameter.getEndDate() == null) {
            endDate = Optional.empty();
        } else {
            endDate = Optional.of(parameter.getEndDate().toGregorianCalendar().toZonedDateTime().toLocalDateTime());
        }

        List<Tweet> tweets = service.getTweets(parameter.getToken(), startDate, endDate);

        GetTweetsResponse response = new GetTweetsResponse();
        response.tweets = new GetTweetsResponse.Tweets();
        response.tweets.tweet = tweets;

        return response;
    }

    /**
     *
     * @param parameter
     * @return
     *     returns soap.GetCommentsResponse
     */
    @WebMethod(operationName = "GetComments")
    @WebResult(name = "GetCommentsResponse", targetNamespace = "http://veebiteenused.ttu.ee", partName = "parameter")
    public GetCommentsResponse getComments(
            @WebParam(name = "GetCommentsRequest", targetNamespace = "http://veebiteenused.ttu.ee", partName = "parameter")
                    GetCommentsRequest parameter) {

        Optional startDate;
        Optional endDate;

        if (parameter.getStartDate() == null) {
            startDate = Optional.empty();
        } else {
            startDate = Optional.of(parameter.getStartDate().toGregorianCalendar().toZonedDateTime().toLocalDateTime());
        }

        if (parameter.getEndDate() == null) {
            endDate = Optional.empty();
        } else {
            endDate = Optional.of(parameter.getEndDate().toGregorianCalendar().toZonedDateTime().toLocalDateTime());
        }

        List<Comment> comments = service.getComments(parameter.getToken(), parameter.getUserID(), startDate, endDate);

        GetCommentsResponse response = new GetCommentsResponse();
        response.comments = new GetCommentsResponse.Comments();
        response.comments.comment = comments;

        return response;
    }

    /**
     *
     * @param parameter
     * @return
     *     returns soap.TweetWithComments
     */
    @WebMethod(operationName = "AddCommentToTweet")
    @WebResult(name = "AddCommentToTweetResponse", targetNamespace = "http://veebiteenused.ttu.ee", partName = "parameter")
    public TweetWithComments addCommentToTweet(
            @WebParam(name = "AddCommentToTweetRequest", targetNamespace = "http://veebiteenused.ttu.ee", partName = "parameter")
                    AddCommentToTweetRequest parameter) {

        return service.addCommentToTweet(parameter.getToken(), parameter.getMessage(), parameter.getOwnerID(), parameter.getTweetID());
    }

    /**
     *
     * @param parameter
     * @return
     *     returns soap.TweetWithComments
     */
    @WebMethod(operationName = "GetTweetComments")
    @WebResult(name = "GetTweetCommentsResponse", targetNamespace = "http://veebiteenused.ttu.ee", partName = "parameter")
    public TweetWithComments getTweetComments(
            @WebParam(name = "GetTweetCommentsRequest", targetNamespace = "http://veebiteenused.ttu.ee", partName = "parameter")
                    GetTweetCommentsRequest parameter) {

        return service.getTweetComments(parameter.getToken(), parameter.getTweetID());
    }

    public static void main(String[] args) {
        Object implementor = new TwitterPortType();
        String address = "http://localhost:8080/soap";
        Endpoint.publish(address, implementor);
    }

}
